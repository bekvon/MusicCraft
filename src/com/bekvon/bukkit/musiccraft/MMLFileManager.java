/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.bekvon.bukkit.musiccraft;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Properties;

/**
 *
 * @author Administrator
 */
public class MMLFileManager {

    File songFolder;

    public MMLFileManager(File songDirectory)
    {
        songFolder = songDirectory;
        songFolder.mkdirs();
    }

    public synchronized MMLSong getSong(String fileName)
    {
        try {
            fileName = fileName + ".mml";
            FileInputStream fileIn = new FileInputStream(new File(songFolder, fileName));
            Properties songInfo = new Properties();
            songInfo.load(fileIn);
            fileIn.close();
            return MMLSong.parseMML(songInfo.getProperty("Song"),songInfo.getProperty("Composer"),songInfo.getProperty("Name"));
        } catch (Exception ex) {
            return null;
        }
    }

    public synchronized void saveSong(String mmlString, String composer, String fileName) {
        try {
            String name = fileName;
            fileName = fileName + ".mml";
            File songFile = new File(songFolder, fileName);
            if (songFile.isFile()) {
                songFile.delete();
            }
            FileOutputStream fileOut = new FileOutputStream(songFile);
            Properties songInfo = new Properties();
            songInfo.setProperty("Song", mmlString);
            songInfo.setProperty("Composer", composer);
            songInfo.setProperty("Name", name);
            songInfo.store(fileOut, "MML Song file generated by MusicCraft.");
            fileOut.close();
        } catch (Exception ex) {
            return;
        }
    }

    public synchronized void saveSong(MMLSong song, String fileName)
    {
        try {
            fileName = fileName + ".mml";
            File songFile = new File(songFolder, fileName);
            if(songFile.isFile())
                songFile.delete();
            FileOutputStream fileOut = new FileOutputStream(songFile);
            Properties songInfo = new Properties();
            songInfo.setProperty("Song", song.getOrigScript());
            songInfo.setProperty("Composer", song.getComposer());
            songInfo.setProperty("Name", song.getSongName());
            songInfo.store(fileOut, "MML Song file generated by MusicCraft.");
            fileOut.close();
        } catch (Exception ex) {
            return;
        }
    }
    public synchronized String getSongComposer(String fileName) {
        try {
            fileName = fileName + ".mml";
            FileInputStream fileIn = new FileInputStream(new File(songFolder, fileName));
            Properties songInfo = new Properties();
            songInfo.load(fileIn);
            fileIn.close();
            return songInfo.getProperty("Composer");
        } catch (Exception ex) {
            return null;
        }
    }

    public synchronized String getSongMML(String fileName) {
        try {
            fileName = fileName + ".mml";
            FileInputStream fileIn = new FileInputStream(new File(songFolder, fileName));
            Properties songInfo = new Properties();
            songInfo.load(fileIn);
            fileIn.close();
            return songInfo.getProperty("Song");
        } catch (Exception ex) {
            return null;
        }
    }

    public synchronized String getSongName(String fileName) {
        try {
            fileName = fileName + ".mml";
            FileInputStream fileIn = new FileInputStream(new File(songFolder, fileName));
            Properties songInfo = new Properties();
            songInfo.load(fileIn);
            fileIn.close();
            return songInfo.getProperty("Name");
        } catch (Exception ex) {
            return null;
        }
    }

    public synchronized ArrayList getSongList()
    {
        ArrayList<String> songNames = new ArrayList<String>();
        File[] list = songFolder.listFiles();
        for(int i = 0; i < list.length; i ++)
        {
            File thisFile = list[i];
            if(thisFile.isFile())
            {
                String thisName = thisFile.getName();
                if(thisName.endsWith(".mml"))
                {
                    thisName = thisName.substring(0, thisName.length()-4);
                    songNames.add(thisName);
                }
            }
        }
        return songNames;
    }

    public synchronized boolean getSongExists(String name)
    {
        File songFile = new File(songFolder,name+".mml");
        return songFile.isFile();
    }

    public synchronized void removeSong(String name)
    {
        File songFile = new File(songFolder,name+".mml");
        if(songFile.isFile())
            songFile.delete();
    }

    public synchronized File getSongDir()
    {
        return songFolder;
    }
}
